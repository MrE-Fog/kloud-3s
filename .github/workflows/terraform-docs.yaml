name: Generate terraform docs
on:
  push:
    branches:
      - master
    paths:
      - 'deploy/**'
      - '.github/workflows/terraform-docs.yaml'
jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
    
    - name: Render terraform docs inside the README.md and push changes back to branch
      uses: Dirrk/terraform-docs@v1.0.8
      with:
        tf_docs_content_type: table
        tf_docs_find_dir: deploy/
        tf_docs_output_file: README.md
        tf_docs_output_method: inject
        tf_docs_git_push: 'true'
        tf_docs_git_commit_message: "terraform-docs: generated by github action"
        tf_docs_template: |
          # Usage
          
          1. Clone the repo
              ```sh
              $ git clone https://github.com/jawabuu/kloud-3s.git
              ```
          1. Switch to this directory.
              ```sh
              $ cd kloud-3s/deploy/[provider]
              ```
          1. Copy [tfvars.example](./tfvars.example) to terraform.tfvars
              ```sh
              $ cp tfvars.example terraform.tfvars
              ```
          1. Using your favourite editor, update values in terraform.tfvars
              ```sh
              $ nano terraform.tfvars
              ```
          1. Run `terraform init` to initalize modules
              ```sh
              $ terraform init
              ```
          1. Run `terraform plan` to view changes terraform will make 
              ```sh
              $ terraform plan
              ```
          1. Run `terraform apply` to create your resources
              ```sh
              $ terraform apply --auto-approve
              ```
          1. Set `KUBECONFIG` by running `$(terraform output kubeconfig)`
              ```sh
              $ $(terraform output kubeconfig)
              ```

          <!--- BEGIN_TF_DOCS --->
          <!--- END_TF_DOCS --->
