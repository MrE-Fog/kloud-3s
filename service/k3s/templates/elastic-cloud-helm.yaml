---
apiVersion: v1
kind: Namespace
metadata:
  name: elastic-system
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: eck-operator
  namespace: kube-system
spec:
  chart: eck-operator
  repo: https://helm.elastic.co
  targetNamespace: elastic-system
  valuesContent: |-
    resources:
      limits:
        cpu: 150m
        memory: 224Mi
      requests:
        cpu: 75m
        memory: 100Mi
---
# This sample sets up a an Elasticsearch cluster along with a Kibana instance
# and an APM server, configured to be able to communicate with each other
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es
  namespace: elastic-system
spec:
  version: 7.6.0
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  nodeSets:
  - name: default
    count: 1
    config:
      node.master: true
      node.data: true
      node.ingest: true
      # This setting could have performance implications for production clusters.
      # See: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
      node.store.allow_mmap: false
      ## Disable Auth
      # xpack.security.authc:
      #     anonymous:
      #       username: anonymous
      #       roles: superuser
      #       authz_exception: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms300m -Xmx300m
          resources:
            requests:
              memory: 300Mi
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 3Gi
        # storageClassName: default
        # affinity:
        #   nodeAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #       nodeSelectorTerms:
        #       - matchExpressions:
        #         - key: node-role.kubernetes.io/master
        #           operator: DoesNotExist
---
apiVersion: apm.k8s.elastic.co/v1
kind: ApmServer
metadata:
  name: es
  namespace: elastic-system
spec:
  version: 7.6.0
  count: 1
  elasticsearchRef:
    name: "es"
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  podTemplate:
    spec:
      containers:
      - name: apm-server
        resources:
          requests:
            memory: 256Mi
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: es
  namespace: elastic-system
spec:
  version: 7.6.0
  count: 1
  elasticsearchRef:
    name: "es"
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  ## Disable Auth
  # config:
  #   xpack.security.enabled: false
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 300Mi
        ## Disable Auth
        # readinessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /
        #     port: 5601
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 5
---
# Fetch Credentials
# kubectl -n elastic-system get secret -l eck.k8s.elastic.co/credentials=true
# kubectl -n elastic-system get secret es-es-elastic-user -o=jsonpath='{.data.elastic}' | base64 --decode
# kubectl -n elastic-system get secret es-kibana-user -o=jsonpath='{.data.elastic-system-es-kibana-user}' | base64 --decode
